"""initial migration

Revision ID: 5c560ba19204
Revises: 
Create Date: 2025-06-03 01:21:47.870817

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5c560ba19204'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('machine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_code', sa.String(length=50), nullable=False),
    sa.Column('project_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('route', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_code')
    )
    op.create_table('end_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('sap_id', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('completion_date', sa.Date(), nullable=False),
    sa.Column('setup_time_std', sa.Float(), nullable=False),
    sa.Column('cycle_time_std', sa.Float(), nullable=False),
    sa.Column('is_first_piece_fpi_required', sa.Boolean(), nullable=False),
    sa.Column('is_last_piece_lpi_required', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sap_id')
    )
    op.create_table('operator_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operator_name', sa.String(length=100), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('shift', sa.String(length=20), nullable=False),
    sa.Column('login_time', sa.DateTime(), nullable=True),
    sa.Column('logout_time', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('machine_breakdown_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('breakdown_start_time', sa.DateTime(), nullable=False),
    sa.Column('breakdown_end_time', sa.DateTime(), nullable=True),
    sa.Column('reported_by_operator_session_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ),
    sa.ForeignKeyConstraint(['reported_by_operator_session_id'], ['operator_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('machine_drawing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drawing_number', sa.String(length=100), nullable=False),
    sa.Column('sap_id', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['sap_id'], ['end_product.sap_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('drawing_number')
    )
    op.create_table('operator_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operator_session_id', sa.Integer(), nullable=False),
    sa.Column('drawing_id', sa.Integer(), nullable=False),
    sa.Column('end_product_sap_id', sa.String(length=50), nullable=False),
    sa.Column('setup_start_time', sa.DateTime(), nullable=True),
    sa.Column('setup_end_time', sa.DateTime(), nullable=True),
    sa.Column('first_cycle_start_time', sa.DateTime(), nullable=True),
    sa.Column('last_cycle_start_time', sa.DateTime(), nullable=True),
    sa.Column('last_cycle_end_time', sa.DateTime(), nullable=True),
    sa.Column('current_status', sa.String(length=50), nullable=False),
    sa.Column('run_planned_quantity', sa.Integer(), nullable=True),
    sa.Column('run_completed_quantity', sa.Integer(), nullable=True),
    sa.Column('run_rejected_quantity_fpi', sa.Integer(), nullable=True),
    sa.Column('run_rejected_quantity_lpi', sa.Integer(), nullable=True),
    sa.Column('run_rework_quantity_fpi', sa.Integer(), nullable=True),
    sa.Column('run_rework_quantity_lpi', sa.Integer(), nullable=True),
    sa.Column('fpi_status', sa.String(length=20), nullable=True),
    sa.Column('lpi_status', sa.String(length=20), nullable=True),
    sa.Column('production_hold_fpi', sa.Boolean(), nullable=True),
    sa.Column('is_rework_task', sa.Boolean(), nullable=True),
    sa.Column('original_operator_log_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['drawing_id'], ['machine_drawing.id'], ),
    sa.ForeignKeyConstraint(['end_product_sap_id'], ['end_product.sap_id'], ),
    sa.ForeignKeyConstraint(['operator_session_id'], ['operator_session.id'], ),
    sa.ForeignKeyConstraint(['original_operator_log_id'], ['operator_log.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quality_check',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operator_log_id', sa.Integer(), nullable=False),
    sa.Column('inspector_name', sa.String(length=100), nullable=False),
    sa.Column('check_type', sa.String(length=20), nullable=False),
    sa.Column('result', sa.String(length=10), nullable=False),
    sa.Column('lpi_quantity_inspected', sa.Integer(), nullable=True),
    sa.Column('lpi_quantity_rejected', sa.Integer(), nullable=True),
    sa.Column('lpi_quantity_to_rework', sa.Integer(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['operator_log_id'], ['operator_log.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rework_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_operator_log_id', sa.Integer(), nullable=True),
    sa.Column('originating_quality_check_id', sa.Integer(), nullable=False),
    sa.Column('drawing_id', sa.Integer(), nullable=False),
    sa.Column('quantity_to_rework', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('manager_approved_by', sa.String(length=100), nullable=True),
    sa.Column('manager_approval_time', sa.DateTime(), nullable=True),
    sa.Column('manager_notes', sa.Text(), nullable=True),
    sa.Column('assigned_operator_log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_operator_log_id'], ['operator_log.id'], ),
    sa.ForeignKeyConstraint(['drawing_id'], ['machine_drawing.id'], ),
    sa.ForeignKeyConstraint(['originating_quality_check_id'], ['quality_check.id'], ),
    sa.ForeignKeyConstraint(['source_operator_log_id'], ['operator_log.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('assigned_operator_log_id')
    )
    op.create_table('scrap_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('originating_quality_check_id', sa.Integer(), nullable=False),
    sa.Column('drawing_id', sa.Integer(), nullable=False),
    sa.Column('quantity_scrapped', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('scrapped_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['drawing_id'], ['machine_drawing.id'], ),
    sa.ForeignKeyConstraint(['originating_quality_check_id'], ['quality_check.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scrap_log')
    op.drop_table('rework_queue')
    op.drop_table('quality_check')
    op.drop_table('operator_log')
    op.drop_table('machine_drawing')
    op.drop_table('machine_breakdown_log')
    op.drop_table('operator_session')
    op.drop_table('end_product')
    op.drop_table('project')
    op.drop_table('machine')
    # ### end Alembic commands ###
